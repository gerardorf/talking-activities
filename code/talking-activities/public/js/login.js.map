{"version":3,"sources":["authenticationService.js","controller.js","labelsFactory.js","labelsService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.js","sourcesContent":["talking.service('authenticationService', function($http, $cookies) {\n    const ENDPOINT = '/system/authentication';\n\n    var authenticate = function(credentials){\n        return $http.post(ENDPOINT, credentials);\n    };\n    \n    var saveUserToken = function(token){\n        $cookies.put('user_token', token);\n    };\n\n    var addToUserList = function(token){\n        var username = extractUsername(token);\n        save(username);\n    };\n\n    var extractUsername = function(token){\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\n        return JSON.parse(atob(base64)).username;\n    };\n\n    function getTrackedUsers() {\n        var logged = $cookies.getObject('logged_users');\n        if (logged === undefined) logged = [];\n        return logged;\n    }\n\n    function save(user) {\n        var tracked = getTrackedUsers();\n        if (isANewUser(tracked, user)){\n            tracked.push(user);\n            $cookies.putObject('logged_users', tracked);\n        }\n    }\n\n    function isANewUser(logged, user) {\n        for(var i=0; i < logged.length; i++) {\n            if(logged[i]===user) return false;\n        }\n        return true;\n    }\n\n    return{\n        authenticate: authenticate,\n        saveToken: saveUserToken,\n        trackUser: addToUserList\n    }\n});","talking.controller('loginController', function ($scope, $location, labelsFactory, authenticationService) {\n    $scope.login = {\n        email: '',\n        password: ''\n    };\n    $scope.labels = labelsFactory.page();\n    $scope.error = false;\n\n    $scope.authenticate = function () {\n        authenticationService.authenticate($scope.login)\n            .then(validateSession)\n            .then(goToStartPage)\n            .catch(showErrorMessage);\n    };\n\n    var validateSession = function(response) {\n        var token = response.data.token;\n        authenticationService.saveToken(token);\n        authenticationService.trackUser(token);\n    };\n\n    var goToStartPage = function () {\n        $location.path('/welcome');\n    };\n    \n    var showErrorMessage = function (response) {\n        $scope.error = labelsFactory.error(response.data.error);\n    };\n});\n","talking.factory('labelsFactory', function(labelsService) {\n    \n    var pageLabels = function() {\n        return labelsService.loadLabels(['login.mail.label',\n            'login.password.label',\n            'login.submit.label',\n            'login.title.label'\n        ]);\n    };\n\n    var errorLabel = function(errorKey) {\n        return labelsService.loadLabel(errorKey);\n    };\n\n    return {\n        page: pageLabels,\n        error: errorLabel\n    };\n});\n","talking.service('labelsService', function($http) {\n    const ENDPOINT = '/system/labels';\n    \n    var loadLabel = function (key) {\n        return loadLabels([key])\n    };\n\n    var loadLabels = function(keys) {\n        var labels = {};\n        request(keys)\n            .then(function (response) {\n                for (var i = 0; i < response.data.length; i++) {\n                    labels[response.data[i].key] = response.data[i].value;\n                }\n            });\n        return labels;\n    };\n\n    var request = function (keys) {\n        return $http.post(ENDPOINT, {keys: keys});\n    };\n    \n    return {\n        loadLabel: loadLabel,\n        loadLabels: loadLabels\n    }\n});\n"],"sourceRoot":"/source/"}